# {{ note }}
FROM {{ baseImage }}

{% if label %}
LABEL {{ label | join('\ ') }}
{% endif %}

ENV DEBIAN_FRONTEND=noninteractive
USER root

{% if systemPackages %}
RUN apt-get update -q -y \
  && apt-get install --no-install-recommends --fix-missing -y \
    {% for package in systemPackages %}
    {{ package }} \
    {% endfor %}
  && apt-get autoremove -y \
  && apt-get clean all
{% endif %}

{% if useradd %}
ENV USER_NAME=rstudio

RUN apt-get update -q -y \
  && apt-get install -y sudo \
  && useradd -m rstudio -u 1000 \
  && mkdir -p /home/rstudio \
  && chown -R rstudio /home/rstudio \
  && usermod -a -G staff rstudio \
  && usermod -aG sudo rstudio \
  && echo "rstudio ALL=(ALL) NOPASSWD:/usr/bin/apt-get" >> /etc/sudoers
{% endif %}

{% if tinytex %}
RUN apt-get update -qq \
    && apt-get install -y --no-install-recommends \
      apt-utils \
      xz-utils \
      curl \
      wget \
      perl-doc \
      libxt6 \
      texinfo \
      ghostscript \
      latexdiff \
    && apt-get autoremove -y \
    && apt-get autoclean -y

RUN echo "PATH=${PATH}" >> ${R_HOME}/etc/Renviron

RUN install2.r -n -2 --skipinstalled --error \
   tinytex

USER rstudio

RUN wget --no-check-certificate -qO- "https://yihui.org/gh/tinytex/tools/install-unx.sh" | sh

ENV PATH="/home/rstudio/bin/:$PATH"

# Initialize tlmgr in user mode (creates a user-specific tree for packages)
RUN tlmgr init-usertree

RUN R -e "tinytex::tlmgr_install( \
  c('ae', \
    'amsmath', \
    'babel-english', \
    'bigintcalc', \
    'bitset', \
    'bookmark', \
    'booktabs', \
    'caption', \
    'colortbl', \
    'csquotes', \
    'environ', \
    'epstopdf-pkg', \
    'etexcmds', \
    'fancyhdr', \
    'float', \
    'footnotebackref', \
    'fontspec', \
    'unicode-math', \
    'upquote', \
    'microtype', \
    'lmodern', \
    'xurl', \
    'microtype', \
    'fvextra', \
    'geometry', \
    'gettitlestring', \
    'hycolor', \
    'hyperref', \
    'inconsolata', \
    'intcalc', \
    'koma-script', \
    'kvdefinekeys', \
    'kvsetkeys', \
    'latex-amsmath-dev', \
    'latexmk', \
    'letltxmacro', \
    'lineno', \
    'listings', \
    'ltxcmds', \
    'ly1', \
    'makecell', \
    'mdframed', \
    'mdwtools', \
    'metafont', \
    'mfware', \
    'multirow', \
    'needspace', \
    'oberdiek', \
    'parskip', \
    'pdfcol', \
    'pdfcrop', \
    'pdfescape', \
    'pdflscape', \
    'pgf', \
    'refcount', \
    'rerunfilecheck', \
    'setspace', \
    'sourcecodepro', \
    'sourcesanspro', \
    'stringenc', \
    'tabu', \
    'tcolorbox', \
    'tex', \
    'threeparttable', \
    'threeparttablex', \
    'titling', \
    'trimspaces', \
    'ulem', \
    'uniquecounter', \
    'upquote', \
    'varwidth', \
    'wrapfig', \
    'xcolor', \
    'zapfding', \
    'zref'))"

USER root

{% endif %}

{% if quarto %}
ENV QUARTO_VERSION={{quartoVer}}

RUN  wget -N --no-check-certificate -q -O install_quarto.sh \
  "https://raw.githubusercontent.com/rocker-org/rocker-versioned2/master/scripts/install_quarto.sh" \
  && chmod +x install_quarto.sh \
  && bash install_quarto.sh \
  && rm install_quarto.sh

{% endif %}

{% if updateLatex %}
USER rstudio
RUN tlmgr option repository http://ctan.math.utah.edu/ctan/tex-archive/systems/texlive/tlnet && \
    tlmgr update --self --all
{% endif %}

{% if crossrefVer %}
ENV PANDOC_VERSION={{pandocVer}}
ENV CROSSREF_VERSION={{crossrefVer}}

COPY scripts/install_crossref.sh  /rocker_scripts/install_crossref.sh

RUN /rocker_scripts/install_crossref.sh
{% endif %}

{% if radian %}
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir setuptools==58.2.0 radian
RUN echo 'options(repos = c(CRAN = "https://packagemanager.posit.co/cran/__linux__/jammy/latest"))' >> /usr/local/lib/R/etc/Rprofile.site
{% endif %}

{% if bio %}
RUN Rscript -e "install.packages('BiocManager')" \
  && Rscript -e "BiocManager::install(c('marray', 'affy', 'Biobase'))"
{% endif %}

{% if Rcpp %}
RUN Rscript -e "install.packages('Rcpp')"
{% endif %}

{% if installGithub %}
RUN installGithub.r --update FALSE \
    {% for github in installGithub %}
    {{ github }} \
    {% endfor %}
  && rm -rf /tmp/downloaded_packages
{% endif %}

{% if installCRAN %}
RUN install2.r -n -2 --skipinstalled --error \
    {% for cran in installCRAN %}
    {{ cran }} \
    {% endfor %}
  && rm -rf /tmp/downloaded_packages
{% endif %}

{% if gpu %}
# libtbb2 for cmdstan (cpu)
RUN apt update && apt -y install libtbb2 \
    clinfo

RUN ln -s /usr/local/cuda-11.8/targets/x86_64-linux/lib/libOpenCL.so /usr/lib/libOpenCL.so

RUN mkdir -p /etc/OpenCL/vendors && \
    echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd
{% endif %}

{% if cmdstan %}
ENV CMDSTAN_VERSION={{cmdstanVer}}

RUN R -e 'install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))'

RUN mkdir -p  /opt/cmdstan \
 && Rscript -e "cmdstanr::install_cmdstan(dir = '/opt/cmdstan', release_url = 'https://github.com/stan-dev/cmdstan/releases/download/v${CMDSTAN_VERSION}/cmdstan-${CMDSTAN_VERSION}.tar.gz', cores = 2, timeout = 3600)"

ENV CMDSTAN_PATH=/opt/cmdstan/cmdstan-${CMDSTAN_VERSION}

{% endif %}

{% if font %}
ENV DEBIAN_FRONTEND teletype

RUN  apt-get update -q -y \
    && apt-get install ttf-mscorefonts-installer --fix-missing -y \
    && fc-cache -f \
    && apt-get autoremove -y \
    && apt-get autoclean -y

RUN install2.r -n -2 --skipinstalled --error \
  extrafont

RUN R -e 'remotes::install_version("Rttf2pt1", version = "1.3.8")'
RUN R -e 'extrafont::font_import(prompt = FALSE)'
{% endif %}

{% if vscodeRenv %}
# vscode-R
USER rstudio
RUN mkdir -p /home/rstudio/vscode-R

WORKDIR /home/rstudio

RUN R -e 'renv::init(project = "/home/rstudio/vscode-R")'

WORKDIR /home/rstudio/vscode-R
RUN R -e 'renv::install(c("languageserver", "httpgd", "devtools", "yaml"))'

USER root
WORKDIR /
{% endif %}

{% if zsh %}
# Install dependencies and tools including Cargo and Rust
RUN apt-get update && apt-get install -y \
  curl \
  git \
  wget \
  vim \
  peco \
  fzf \
  zsh \
  htop \
  tree \
  ripgrep \
  neofetch \
  stow \
  cargo \
  fd-find \
  openssh-client \
  && rm -rf /var/lib/apt/lists/*

# Install eza
RUN apt-get update && \
    apt-get install -y gpg wget && \
    mkdir -p /etc/apt/keyrings && \
    wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | \
    gpg --dearmor -o /etc/apt/keyrings/gierens.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | \
    tee /etc/apt/sources.list.d/gierens.list && \
    chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list && \
    apt-get update && \
    apt-get install -y eza \
    && rm -rf /var/lib/apt/lists/*

# Install Rust applications using Cargo, installed via apt
USER rstudio
RUN cargo install zoxide --locked --version 0.9.2 \
  && cargo install dutree

USER root

RUN sed -i 's|/home/rstudio:/bin/bash|/home/rstudio:/usr/bin/zsh|' /etc/passwd

USER rstudio

# Change shell to Zsh for Docker RUN commands
SHELL ["/bin/zsh", "-c"]

# Install Zinit
RUN print -P "%F{33} Installing Zinitâ€¦%f" && \
    mkdir -p "/home/rstudio/.local/share/zinit" && chmod g-rwX "/home/rstudio/.local/share/zinit" && \
    git clone https://github.com/zdharma-continuum/zinit "/home/rstudio/.local/share/zinit/zinit.git" && \
    print -P "%F{34}Installation successful.%f" || print -P "%F{160}The clone has failed.%f"

RUN source /home/rstudio/.local/share/zinit/zinit.git/zinit.zsh && \
    zinit load zdharma-continuum/zinit-annex-as-monitor && \
    zinit load zdharma-continuum/zinit-annex-bin-gem-node && \
    zinit load zdharma-continuum/zinit-annex-patch-dl && \
    zinit load zdharma-continuum/zinit-annex-rust

# Source Zinit script and perform any additional setup
RUN source /home/rstudio/.local/share/zinit/zinit.git/zinit.zsh && \
    zinit load zdharma-continuum/zinit-annex-as-monitor && \
    zinit load zdharma-continuum/zinit-annex-bin-gem-node && \
    zinit load zdharma-continuum/zinit-annex-patch-dl && \
    zinit load zdharma-continuum/zinit-annex-rust

# Source Zinit script and perform any additional setup
RUN source /home/rstudio/.local/share/zinit/zinit.git/zinit.zsh && \
    zinit light zsh-users/zsh-autosuggestions && \
    zinit light zdharma-continuum/fast-syntax-highlighting && \
    zinit light zsh-users/zsh-completions

RUN source /home/rstudio/.local/share/zinit/zinit.git/zinit.zsh && \
    zinit ice depth=1 && \
    zinit light jeffreytse/zsh-vi-mode

RUN git clone https://github.com/sindresorhus/pure.git /home/rstudio/.local/share/zinit/plugins/sindresorhus---pure

{% endif %}
