# {{ note }}
FROM {{ baseImage }}

{% if label %}
LABEL {{ label | join('\ ') }}
{% endif %}

ENV DEBIAN_FRONTEND noninteractive

{% if systemPackages %}
RUN apt-get update -q -y \
  && apt-get install --no-install-recommends --fix-missing -y \
    {% for package in systemPackages %}
    {{ package }} \
    {% endfor %}
  && apt-get autoremove -y \
  && apt-get clean all
{% endif %}

{% if texlive %}
RUN apt-get update -qq \
    && apt-get install -y --no-install-recommends \
      apt-utils \
      curl \
      wget \
      texinfo \
      apt-utils \
      ghostscript \
      latexdiff \
    && apt-get autoremove -y \
    && apt-get autoclean -y

ARG TINYTEX_DIR='/opt/tinytex'

RUN mkdir ${TINYTEX_DIR}

RUN install2.r -n -1 --skipinstalled --error \
      tinytex

  #RUN Rscript -e "tinytex::install_tinytex()"
  #ENV PATH=$PATH:/root/.TinTeX/bin/x86_64-linux/

RUN wget -qO- \
    "https://github.com/yihui/tinytex/raw/main/tools/install-unx.sh" | \
    TINYTEX_DIR=${TINYTEX_DIR} sh -s - --admin --no-path \
  && ${TINYTEX_DIR}/bin/*/tlmgr path add


RUN useradd -m rstudio -u 1000 \
    && mkdir -p /home/rstudio \
    && chown -R rstudio /home/rstudio \
    && usermod -a -G staff rstudio

RUN chown -R rstudio:staff ${TINYTEX_DIR} \
    && chown -R rstudio:staff /usr/local/lib/R/site-library \
    && chmod -R g+w ${TINYTEX_DIR} \
    && chmod -R g+wx "${TINYTEX_DIR}/bin" \
    && umask 022

RUN tlmgr path add \
  && Rscript -e "tinytex::r_texmf()" \
  && chown -R rstudio:staff ${TINYTEX_DIR} \
  && chown -R rstudio:staff /usr/local/lib/R/site-library \
  && chmod -R g+w ${TINYTEX_DIR} \
  && chmod -R g+wx "${TINYTEX_DIR}/bin"

RUN echo "PATH=${PATH}" >> ${R_HOME}/etc/Renviron
{% endif %}

{% if updateLatex %}
RUN tlmgr update --self
RUN tlmgr install \
  amsmath \
  latex-amsmath-dev \
  babel-english \
  bigintcalc \
  bitset \
  bookmark \
  booktabs \
  caption \
  colortbl \
  csquotes \
  environ \
  epstopdf-pkg \
  etexcmds \
  fancyhdr \
  float \
  footnotebackref \
  geometry \
  gettitlestring \
  hycolor \
  hyperref \
  intcalc \
  koma-script \
  kvdefinekeys \
  kvsetkeys \
  latexmk \
  letltxmacro \
  lineno \
  ltxcmds \
  ly1 \
  makecell \
  mdframed \
  mdwtools \
  multirow \
  needspace \
  oberdiek \
  pdfcrop \
  pdfescape \
  pdflscape \
  refcount \
  rerunfilecheck \
  setspace \
  sourcecodepro \
  sourcesanspro \
  stringenc \
  tabu \
  threeparttable \
  threeparttablex \
  titling \
  trimspaces \
  ulem \
  uniquecounter \
  varwidth \
  wrapfig \
  xcolor \
  zapfding \
  zref
{% endif %}

{% if crossref %}
RUN rm -rf /usr/lib/rstudio-server/bin/pandoc/pandoc \
  usr/local/bin/pandoc \
  usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc \
  usr/local/bin/pandoc-citeproc

#RUN PANDOC_DL_URL=$(wget -qO- https://api.github.com/repos/jgm/pandoc/releases/latest | grep -oP "(?<=\"browser_download_url\":\s\")https.*amd64.deb") \
RUN PANDOC_DL_URL=https://github.com/jgm/pandoc/releases/download/2.16.2/pandoc-2.16.2-1-amd64.deb \
  && wget ${PANDOC_DL_URL} -O pandoc-amd64.deb \
  && dpkg -i pandoc-amd64.deb \
  && rm pandoc-amd64.deb

## Symlink pandoc & standard pandoc templates for use system-wide
RUN PANDOC_TEMPLATES_VERSION=`pandoc -v | grep -oP "(?<=pandoc\s)[0-9\.]+$"` \
 && wget https://github.com/jgm/pandoc-templates/archive/${PANDOC_TEMPLATES_VERSION}.tar.gz -O pandoc-templates.tar.gz \
 && rm -fr /opt/pandoc/templates \
 && mkdir -p /opt/pandoc/templates \
 && tar xvf pandoc-templates.tar.gz \
 && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \
 && rm -fr /root/.pandoc \
 && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates

#RUN CROSSREF_DL_URL=$(wget -qO- https://api.github.com/repos/lierdakil/pandoc-crossref/releases/latest | grep -oP "(?<=\"browser_download_url\":\s\")https.*tar\.xz" | grep Linux) \
RUN CROSSREF_DL_URL=https://github.com/lierdakil/pandoc-crossref/releases/download/v0.3.12.1a/pandoc-crossref-Linux.tar.xz \
  && wget -O - ${CROSSREF_DL_URL} | \
  tar Jxf - \
  && mv pandoc-crossref /usr/local/bin \
  && rm -rf pandoc-crossref.1
{% endif %}

{% if radian %}
#RUN pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple \
RUN pip3 install --upgrade setuptools \
  && pip3 install --default-timeout=100 -U radian
{% endif %}

{% if bio %}
RUN Rscript -e "install.packages('BiocManager')" \
  && Rscript -e "BiocManager::install(c('marray', 'affy', 'Biobase'))"
{% endif %}

{% if Rcpp %}
RUN Rscript -e "install.packages('Rcpp')"
{% endif %}

{% if installGithub %}
RUN installGithub.r --update FALSE \
    {% for github in installGithub %}
    {{ github }} \
    {% endfor %}
  && rm -rf /tmp/downloaded_packages
{% endif %}

{% if installCRAN %}
RUN install2.r -n -2 --skipinstalled --error \
    {% for cran in installCRAN %}
    {{ cran }} \
    {% endfor %}
  && rm -rf /tmp/downloaded_packages
{% endif %}

{% if gpu %}
# libtbb2 for cmdstan (cpu)
RUN apt update && apt -y install libtbb2 \
    clinfo

RUN ln -s /usr/local/cuda-10.1/targets/x86_64-linux/lib/libOpenCL.so /usr/lib/libOpenCL.so

RUN mkdir -p /etc/OpenCL/vendors && \
    echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd
{% endif %}

{% if cmdstan %}
RUN installGithub.r \
      stan-dev/cmdstanr

RUN mkdir -p  /opt/cmdstan \
 && Rscript -e "cmdstanr::install_cmdstan(dir = '/opt/cmdstan', release_url = 'https://github.com/stan-dev/cmdstan/releases/download/v2.29.0/cmdstan-2.29.0.tar.gz', cores = 2, timeout = 2400)"
{% endif %}

{% if font %}
ENV DEBIAN_FRONTEND teletype

RUN  apt-get update -q -y \
    && apt-get install ttf-mscorefonts-installer --fix-missing -y \
    && fc-cache -f \
    && apt-get autoremove -y \
    && apt-get autoclean -y

RUN install2.r -n -2 --skipinstalled --error \
  extrafont

RUN R -e 'remotes::install_version("Rttf2pt1", version = "1.3.8")'
RUN R -e 'extrafont::font_import(prompt = FALSE)'
{% endif %}