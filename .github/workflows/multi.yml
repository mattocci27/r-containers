name: Multibuild

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push Docker images
        run: |
          set -e
          # List of image base names to process
          images=("radian" "radian-verse" "cmdstan-verse" "cmdstan-verse-zsh")
          for image in "${images[@]}"; do
            echo "Processing image: $image"

            # Pull single-arch images for AMD64 and ARM64
            docker pull mattocci/${image}:4.4.2_amd64
            docker pull mattocci/${image}:4.4.2_arm64

            # Dynamically extract the AMD64 digest using jq
            amd64_digest=$(docker manifest inspect mattocci/${image}:4.4.2_amd64 | \
              jq -r '.manifests[] | select(.platform.architecture=="amd64") | .digest')
            echo "AMD64 digest for $image: ${amd64_digest}"

            # Remove any existing manifest list (ignore errors)
            docker manifest rm mattocci/${image}:4.4.2 || true

            # Create the multi-arch manifest list
            docker manifest create mattocci/${image}:4.4.2 \
              "mattocci/${image}@${amd64_digest}" \
              mattocci/${image}:4.4.2_arm64

            # Push the manifest list
            docker manifest push mattocci/${image}:4.4.2
          done
